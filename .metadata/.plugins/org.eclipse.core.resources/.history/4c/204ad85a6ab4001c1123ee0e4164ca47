package com.revature.finalp1.control;

import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;
import org.springframework.web.servlet.view.RedirectView;
import com.revature.finalp1.model.Users;
import com.revature.finalp1.serv.UsersServ;



@RestController
public class UsersControl {


    @Autowired
    private final UsersServ usersService;

    public UsersControl(UsersServ usersService) {
        this.usersService = usersService;
    }
    @RequestMapping(path = "/users", method = RequestMethod.GET)
    public String getUsers(Model model) {
        List<Users> users = usersService.getUsers();
        model.addAttribute("users", users);
        model.addAttribute("ers_users", new Users());
        return "users";
    }
    @RequestMapping("/users")
    public List<Users> getAllUsers() {
    	return usersServices.getUsers();
    }
    @RequestMapping(path = "/users", method = RequestMethod.POST)
    public Object addUsers (@RequestBody Users user) {
    	return usersService.addUsers(user);
    }	
    
     @RequestMapping(path = "/users/{id}", method = RequestMethod.PUT)
    	 public void updateUser(@RequestBody Users users, @PathVariable int id) {
    	  usersService.updateUser(id, users);
    	    }
      @RequestMapping(path="/users/{id}", method = RequestMethod.DELETE )  
      public void deleteUsers(@RequestBody Users users, @PathVariable int id) {
    	  usersService.deleteById(id);

}	
    	
    	
//    	
//}
//@RequestMapping(path = "/users", method = RequestMethod.POST)
//public ModelAndView save(@ModelAttribute Users user) {
//	return usersServices.add(user);
//}	
    	
//    	List<Users> users = usersService.findAll();
//        ModelAndView modelAndView = new ModelAndView();
//        modelAndView.setViewName("ers_users-data");
//        modelAndView.addObject("ers_users", users);
//        return modelAndView;
//    }
}
//    @RequestMapping(path = "/", method = RequestMethod.POST)
//    public RedirectView createUser(RedirectAttributes redirectAttributes, @ModelAttribute Log log) {
//        usersService.createUser(log);
//        String message = "Created user <b>" + log.getFirstname() + " " + log.getLastname() + "</b> ✨.";
//        RedirectView redirectView = new RedirectView("/", true);
//        redirectAttributes.addFlashAttribute("userMessage", message);
//        return redirectView;
//    }

//    @RequestMapping(path = "/{id}", method = RequestMethod.GET)
//    public String findAll(Model model) {
//        List<Users> users = usersService.findAll();
//        model.addAttribute("ers_users", users);
//        model.addAttribute("ers_users", users);
//        return "ers_users";
   
    
//    @RequestMapping(path = "/{id}", method = RequestMethod.GET)
//    public String getUser(Model model, @PathVariable("id") Integer id) {
//        Users log = usersService.getUser(id);
//        model.addAttribute("log", log);
//        return "edit";
//     }
    
 
    
//    public RedirectView updateUser(RedirectAttributes redirectAttributes, @PathVariable("id") Integer id, @ModelAttribute Users log) {
//        usersService.updateUser(id, log);
//        String message = (log.isActive() ? "Updated " : "Deleted ") + " user <b>" + log.getFirstname() + " " + log.getLastname() + "</b> ✨.";
//        RedirectView redirectView = new RedirectView("/", true);
//        redirectAttributes.addFlashAttribute("userMessage", message);
//        return redirectView;
//     
//}}
//    

